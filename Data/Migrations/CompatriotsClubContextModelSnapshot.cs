// <auto-generated />
using System;
using CompatriotsClub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(CompatriotsClubContext))]
    partial class CompatriotsClubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CompatriotsClub.Data.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Activity", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.ActivityMember", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.HasKey("MemberId", "ActivityId")
                        .HasName("PK__Activity__08AF016198F2F7A1");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityMember", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StayingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.AddressMember", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.HasKey("MemberId", "AddressId")
                        .HasName("PK__Address___AC6189B778B5E6D6");

                    b.HasIndex("AddressId");

                    b.ToTable("Address_Member", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool?>("ActiveAccount")
                        .HasColumnType("bit");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(450)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("notes");

                    b.HasKey("Id");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.ContactMembers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ContactId");

                    b.HasIndex("MemberId");

                    b.HasIndex("RoleId");

                    b.ToTable("Contact_Member", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("District", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdMember")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Family", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("TotalFund")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Fund", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.FundGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Finish")
                        .HasColumnType("bit");

                    b.Property<int>("FundId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<double>("Money")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FundId");

                    b.HasIndex("GroupId");

                    b.ToTable("FundGroup", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.FundMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FundId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FundId");

                    b.HasIndex("MemberId");

                    b.ToTable("FundMember", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdMember")
                        .HasColumnType("int")
                        .HasColumnName("idMember");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostID");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Addres")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)");

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("IdAccount")
                        .HasColumnType("int");

                    b.Property<string>("Idcard")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDCard");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasMaxLength(450)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("notes");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Word")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("GroupId");

                    b.ToTable("Member", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.MemberUser", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MemberId", "UserId")
                        .HasName("PK__MemberUS__DD88C7DC1D75B605");

                    b.HasIndex("UserId");

                    b.ToTable("MemberUSer", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NotificationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NotificationType", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex(new[] { "AuthorId" }, "IX_Post_AuthorId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.PostInTopic", b =>
                {
                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("TopicId", "PostId")
                        .HasName("PK__PostInTo__988F295C94CE6EA5");

                    b.HasIndex("PostId");

                    b.ToTable("PostInTopic", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Province", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.RoleMember", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("MemberId", "RoleId")
                        .HasName("PK__Role_Mem__B45FE7F9811444D9");

                    b.HasIndex("RoleId");

                    b.ToTable("Role_Member", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeRole")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Skill", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.UserPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Ward", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CompatriotsClub.Data.ActivityMember", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Member", "Activity")
                        .WithMany("ActivityMembers")
                        .HasForeignKey("ActivityId")
                        .IsRequired()
                        .HasConstraintName("FK__ActivityM__Activ__3B75D760");

                    b.HasOne("CompatriotsClub.Data.Activity", "Member")
                        .WithMany("ActivityMembers")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__ActivityM__Membe__3A81B327");

                    b.Navigation("Activity");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("CompatriotsClub.Data.AddressMember", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Address", "Address")
                        .WithMany("AddressMembers")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("FK__Address_M__Addre__4BAC3F29");

                    b.HasOne("CompatriotsClub.Data.Member", "Member")
                        .WithMany("AddressMembers")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Address_M__Membe__4CA06362");

                    b.Navigation("Address");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("CompatriotsClub.Data.ContactMembers", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Contact", "Contact")
                        .WithMany("ContactMembers")
                        .HasForeignKey("ContactId")
                        .IsRequired()
                        .HasConstraintName("FK__Contact_M__Conta__534D60F1");

                    b.HasOne("CompatriotsClub.Data.Member", "Member")
                        .WithMany("ContactMembers")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Contact_M__Membe__5441852A");

                    b.HasOne("CompatriotsClub.Data.Roles", "Roles")
                        .WithMany("ContactMembers")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Contact_R1__asdasd__534D60F1");

                    b.Navigation("Contact");

                    b.Navigation("Member");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("CompatriotsClub.Data.District", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .IsRequired()
                        .HasConstraintName("FK__District__ProvinceId__5535A963");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("CompatriotsClub.Data.FundGroup", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Fund", "Fund")
                        .WithMany("FundGroups")
                        .HasForeignKey("FundId")
                        .IsRequired()
                        .HasConstraintName("FK__FundGroups1__FundI__412EB0B6");

                    b.HasOne("CompatriotsClub.Data.Group", "Group")
                        .WithMany("FundGroups")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__FundGr1__Group__403A8C7D");

                    b.Navigation("Fund");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("CompatriotsClub.Data.FundMember", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Fund", "Fund")
                        .WithMany("FundMembers")
                        .HasForeignKey("FundId")
                        .IsRequired()
                        .HasConstraintName("FK__FundMember__Fund__6478ECF3");

                    b.HasOne("CompatriotsClub.Data.Member", "Member")
                        .WithMany("FundMembers")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__FundMember__Member__403A8C7D");

                    b.Navigation("Fund");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Image", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostID")
                        .IsRequired()
                        .HasConstraintName("FK__Image_Post__5535A963");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Member", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Family", "Family")
                        .WithMany("Members")
                        .HasForeignKey("FamilyId")
                        .IsRequired()
                        .HasConstraintName("FK__Member__FamilyId__5535A963");

                    b.HasOne("CompatriotsClub.Data.Group", "Group")
                        .WithMany("Members")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__Member__GroupId__5629CD9C");

                    b.Navigation("Family");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("CompatriotsClub.Data.MemberUser", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Member", "Member")
                        .WithMany("MemberUsers")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__MemberUSe__Membe__66603565");

                    b.HasOne("CompatriotsClub.Data.AppUser", "User")
                        .WithMany("MemberUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__MemberUSe__UserI__6754599E");

                    b.Navigation("Member");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Post", b =>
                {
                    b.HasOne("CompatriotsClub.Data.AppUser", null)
                        .WithMany("Posts")
                        .HasForeignKey("AppUserId");
                });

            modelBuilder.Entity("CompatriotsClub.Data.PostInTopic", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Post", "Post")
                        .WithMany("PostInTopics")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__PostInTop__PostI__6477ECF3");

                    b.HasOne("CompatriotsClub.Data.Topic", "Topic")
                        .WithMany("PostInTopics")
                        .HasForeignKey("TopicId")
                        .IsRequired()
                        .HasConstraintName("FK__PostInTop__Topic__6383C8BA");

                    b.Navigation("Post");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("CompatriotsClub.Data.RoleMember", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Member", "Member")
                        .WithMany("RoleMembers")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Role_Memb__Membe__5812160E");

                    b.HasOne("CompatriotsClub.Data.Roles", "Role")
                        .WithMany("RoleMembers")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Role_Memb__RoleI__59063A47");

                    b.Navigation("Member");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CompatriotsClub.Data.RolePermission", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompatriotsClub.Data.AppRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CompatriotsClub.Data.UserPermission", b =>
                {
                    b.HasOne("CompatriotsClub.Data.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompatriotsClub.Data.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Ward", b =>
                {
                    b.HasOne("CompatriotsClub.Data.District", "Districts")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .IsRequired()
                        .HasConstraintName("FK__Ward__DistrictId__5535A963");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("CompatriotsClub.Data.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("CompatriotsClub.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("CompatriotsClub.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("CompatriotsClub.Data.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompatriotsClub.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("CompatriotsClub.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompatriotsClub.Data.Activity", b =>
                {
                    b.Navigation("ActivityMembers");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Address", b =>
                {
                    b.Navigation("AddressMembers");
                });

            modelBuilder.Entity("CompatriotsClub.Data.AppUser", b =>
                {
                    b.Navigation("MemberUsers");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Contact", b =>
                {
                    b.Navigation("ContactMembers");
                });

            modelBuilder.Entity("CompatriotsClub.Data.District", b =>
                {
                    b.Navigation("Wards");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Family", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Fund", b =>
                {
                    b.Navigation("FundGroups");

                    b.Navigation("FundMembers");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Group", b =>
                {
                    b.Navigation("FundGroups");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Member", b =>
                {
                    b.Navigation("ActivityMembers");

                    b.Navigation("AddressMembers");

                    b.Navigation("ContactMembers");

                    b.Navigation("FundMembers");

                    b.Navigation("MemberUsers");

                    b.Navigation("RoleMembers");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Permission", b =>
                {
                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Post", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("PostInTopics");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Roles", b =>
                {
                    b.Navigation("ContactMembers");

                    b.Navigation("RoleMembers");
                });

            modelBuilder.Entity("CompatriotsClub.Data.Topic", b =>
                {
                    b.Navigation("PostInTopics");
                });
#pragma warning restore 612, 618
        }
    }
}
